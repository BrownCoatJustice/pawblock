#!/usr/bin/env python

import argparse
import os
from subprocess import call
import sys

parser = argparse.ArgumentParser(prog='./dev')
subparsers = parser.add_subparsers(metavar='<command>', title='commands')

DOCKER_RUN = ['docker', 'run', '-it', '--rm', '-v',
              os.getcwd() + ':/src:cached', '-w=/src', 'node:8.2.1-alpine']

def sh(args, remaining):
    call(DOCKER_RUN + ['sh'])
parser_sh = subparsers.add_parser('sh', help='Bring up a shell')
parser_sh.set_defaults(func=sh)

def npm(args, remaining):
    call(DOCKER_RUN + ['npm'] + remaining or [])
parser_npm = subparsers.add_parser('npm', help='Run a npm command')
parser_npm.set_defaults(func=npm)

def format(args, remaining):
    rc = call(DOCKER_RUN + ['npx', 'prettier', '--single-quote',
                            '--no-bracket-spacing', '--write', '**/*.js'])
    exit(rc)
parser_format = subparsers.add_parser('format',
    help='Format the code with Prettier')
parser_format.set_defaults(func=format)

def lint(args, remaining):
    rc = call(DOCKER_RUN + ['npx', 'eslint', '**/*.js'])
    exit(rc)
parser_lint = subparsers.add_parser('lint', help='Lint the code with ESLint')
parser_lint.set_defaults(func=lint)

if len(sys.argv) > 1:
    args, remaining = parser.parse_known_args()
    args.func(args, remaining)
else:
    parser.print_help()
